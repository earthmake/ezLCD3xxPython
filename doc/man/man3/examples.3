.TH "examples" 3 "Tue Jul 30 2013" "Version 1.02" "ezLCD Python Module" \" -*- nroff -*-
.ad l
.nh
.SH NAME
examples \- Examples 
.PP
.nf
Button example will display a button widget then poll for button presses and update screen <br>
.fi
.PP
   
.PP
.nf
1 # Button ezLCD Python demo
2 #
3 
4 import platform
5 import sys
6 sys\&.path\&.append('module') 
7 from ezLCD3xx import *
8 
9 LCD = ezLCD(None) 
10 comPort =  LCD\&.findezLCD()
11 
12 #check what OS we are on
13 #Windows
14 if platform\&.system() == 'Windows':
15     LCD = ezLCD(comPort[0][0])
16 #Mac
17 elif platform\&.system() == 'Dawrwin':
18     LCD = ezLCD('/dev/tty\&.usbsomething')
19 #Linux
20 elif platform\&.system() == 'Linux':
21     LCD = ezLCD('/dev/ttyACM0')
22 
23 # Bail out if comport error
24 if LCD\&.openSerial()==False:
25     print 'Error Opening Port'
26     raise SystemExit
27 
28 # Turn verbose off 
29 LCD\&.verbose(OFF)
30 # Turn off button press info from ezLCD
31 LCD\&.wquiet(ON)
32 # CLear screen
33 LCD\&.cls()
34 # Set draw color to red
35 LCD\&.color(RED)
36 # Set widget font 0
37 LCD\&.fontw(0,'1')
38 # Set wodget font 1
39 LCD\&.fontw(1,'0')
40 # Set theme #1 
41 LCD\&.theme(1, 155, 152, 3, 0, 3, 24, 4, 5, 0, 1)
42 # Print string at coordinates x=80 and y=100
43 LCD\&.printString('Hello From Python',80,100)
44 # Draw button widget with a ID of 1
45 LCD\&.button( 1,  80, 150, 155, 50, 1, 0, 10, 6, 3,'Press Here')
46 # Draw a staticText box
47 LCD\&.staticText(2, 35, 30, 250, 30, 8, 1, 1,'Press Button')
48 # Clear widget stack
49 LCD\&.wstack(CLEAR)
50 while True:
51     # check widget stack this will return widget updates (button press ect\&.) last in first out order
52     (ID, Info, Data) = LCD\&.wstack(FIFO)
53 #   print ID, Info, Data
54     # check if ID = 1 widget 1 and info = pressed 
55     if ID == 1 and Info == 4:
56         # clear the stack just to be safe
57 #       LCD\&.wstack(CLEAR)
58         # change draw color to yellow
59         LCD\&.color(YELLOW)
60         # change change string 1 for text on static text ID 2
61         LCD\&.string(1,'Button Pressed')
62         # redraw static text box ID 2 3=redraw      
63         LCD\&.wstate(2, 3)
64     # check if ID = 1 widget 1 and info = pressed and released
65     if ID == 1 and Info == 1:
66         # clear the stack just to be safe
67 #       LCD\&.wstack(CLEAR)
68         # change draw color to yellow
69         LCD\&.color(YELLOW)
70         # change change string 1 for text on static text ID 2
71         LCD\&.string(1,'Button Pressed and Released')
72         # redraw static text box ID 2 3=redraw
73         LCD\&.wstate(2, 3)
74 
75         

.fi
.PP
 Load example will display the cpu load as a graph 
.br
   
.PP
.nf
1 #!/usr/bin/env python
2 # Python Serial library for ezLCD3xx
3 # http://www\&.ezlcd\&.com/
4 #
5 # You need the pySerial Library by Chris Liechti
6 # http://pyserial\&.wiki\&.sourceforge\&.net/pySerial
7 #
8 
9 
10 # END SerLCD Class Definition --------------------------------------
11 
12 # Start Test Program -----------------------------------------------
13 import commands
14 import os
15 import re
16 import time as timer
17 import sys
18 import platform
19 import time
20 import psutil
21     
22 sys\&.path\&.append('module') 
23 from ezLCD3xx import *
24 
25 def drawGrid():
26     LCD\&.lineType(2)
27     LCD\&.xy(0,30)
28     LCD\&.color(BLACK)
29     LCD\&.box(300,110,1)
30     LCD\&.xy(0,0)
31     LCD\&.color(GREEN)
32     LCD\&.printString('Core 1')
33     LCD\&.color(YELLOW)
34     LCD\&.printString('  Core 2')
35     LCD\&.color(155)
36     LCD\&.color(LIME)
37     LCD\&.font('1')
38     LCD\&.font('0')
39     LCD\&.color(151)
40     for y in range(6):
41         LCD\&.xy(0,(y*20)+39)
42         LCD\&.line(300,(y*20)+39)
43     for x in range(16):
44         LCD\&.xy(x*20,39)
45         LCD\&.line(x*20,139)
46     LCD\&.xy(300,39)
47     LCD\&.line(300,139)
48     LCD\&.lineType(0)
49     
50 def drawTime(res):
51     LCD\&.xy(10,140)
52     LCD\&.color(BLACK)
53     LCD\&.box(300,30, FILLED)
54     LCD\&.color(WHITE)
55     Time=str(res)+' Second(s) Per Div'
56     LCD\&.printString(Time)
57 
58     LCD\&.string(5, str(res))
59     LCD\&.wstate(7,REDRAW)
60 
61 LCD = ezLCD(None) 
62 comPort =  LCD\&.findezLCD()
63 
64 #check what OS we are on
65 #Windows
66 if platform\&.system() == 'Windows':
67     LCD = ezLCD(comPort[0][0])
68 #Mac
69 elif platform\&.system() == 'Dawrwin':
70     LCD = ezLCD('/dev/tty\&.usbsomething')
71 #Linux
72 elif platform\&.system() == 'Linux':
73     LCD = ezLCD('/dev/ttyACM0')
74 # Bail out if comport error
75 if LCD\&.openSerial()==False:
76     print 'Error Opening Port'
77     raise SystemExit
78 
79 LCD\&.ping()
80 LCD\&.verbose('OFF')
81 LCD\&.wquiet(ON)
82 LCD\&.cls()
83 LCD\&.fontw(0,'1')
84 LCD\&.fontw(1,'0')
85 LCD\&.fontw(2,'serif24')
86 LCD\&.theme(1, 155, 152, 3, 0, 3, 24, 4, 5, 0, 1)
87 LCD\&.backlight(100, 5, 10)
88 LCD\&.cls()
89 LCD\&.font('0')
90 LCD\&.fonto(0)
91 info = ' '
92 LCD\&.string( 1, '%')
93 LCD\&.color(WHITE)
94 LCD\&.cfgio(8,'analog')
95 print LCD\&.xmax()
96 print LCD\&.ymax()
97 print LCD\&.string(65)
98 print LCD\&.string(66)
99 
100 
101 LCD\&.button( 5, 20, 200, 80, 30 , 1, 0, 10, 1, 2, 'MORE')
102 LCD\&.button( 6, 120, 200, 80, 30 , 1, 0, 10, 1, 3, 'LESS')
103 LCD\&.staticText(7, 10, 170, 220, 25, 8, 1, 5, 'test')
104 drawGrid()
105 x=0
106 y1=239
107 y2=239
108 lx=0
109 ly1=239
110 ly2=239
111 res=5
112 drawTime(res)   
113 LCD\&.wstack(CLEAR)      
114 while True:
115 
116     oldinfo = info
117     cores=psutil\&.cpu_percent(interval=1, percpu=True)
118     y1 = 139 - cores[0]
119     y2 = 139 - cores[1]
120     if x!=0:
121         LCD\&.color(GREEN)
122         LCD\&.xy(lx,ly1)
123         LCD\&.line(x, y1)
124         LCD\&.color(YELLOW)
125         LCD\&.xy(lx,ly2)
126         LCD\&.line(x, y2)
127     ly1 = y1
128     ly2 = y2
129     lx = x   
130     x += 20/res
131     
132     if x >= 300:
133         x=0
134         y1=239
135         y2=239
136         lx =0
137         ly1 =239
138         ly2 =239
139         drawGrid()
140     (ID, info, data) = LCD\&.wstack(LIFO)
141     LCD\&.wstack(CLEAR)
142     if ID == 5 and info==1:
143         res +=1
144         drawTime(res)  
145     if ID == 6 and info==1:
146         if res > 1:
147             res -=1
148             drawTime(res)
149 LCD\&.closeSerial()
150 # End Test Program --------------------------------------

.fi
.PP
 
